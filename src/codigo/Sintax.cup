package codigo;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}
:};


terminal 

    /* Programa Principal */
    Programa, 

    /* Bloques */
    Corchete_a,Corchete_c,
    Parentesis_a,Parentesis_c,
    Llave_a,Llave_c,

    /* Tipo de Datos */
    Entero,Logico,

    /* Instrucciones Condicionales */
    Si,Sino,

    /* Instrucciones de Control */
    Para,Repita,Hasta,Que,

    /* Operación de Asignación */
    Asignacion,

    /* Operaciónes Aritmeticas */
    Suma,Resta,
    Multiplicacion,
    Division,
    Modulo,

    /* Operaciónes Relacionales */
    Menor,Menor_igual,
    Mayor,Mayor_igual,
    Igual,Diferencia,
    
    /* Operaciónes Logicas */
    Y_logico,O_logico,
    Negacion_logica,
    
    /* Otros */
    Linea,Identificador, Punto_coma,
    Numero,
    ERROR;

non terminal 
        INICIO,
        DECLARACION, 
        IN_ROTACION, 
        IN_MOVIMIENTO, 
        SEGMENTO,
        OP_ARITMETICA,
        ASIGNACION_ENTERA,
        ASIGNACION_LOGICA,
        DE_VECTOR,
        TI_VARIABLE,
        PARAMETROS_FUNCION,
        DE_VARIABLE,
        AS_VARIABLE,
        OPERACION,
        FACTOR,
        OPERADOR_SUMA,
        OPERADOR_MULT,
        OP_MOD,
        TERM,
        ELEMENTO,
        OPERADOR_RELACIONAL,
        OPERADOR_LOGICO,
        OP_LOGICA,
        OP_RELACIONAL,
        ELEMENT_LOGICO,
        FACTOR_LOG,
        OPERADOR_SUMA_LOG,
        OPERADOR_MULT_LOG,
        OP_ARITMETICA_LOG,
        TERM_LOG,
        OP_MOD_LOG,
        OP2,
        CONDICIONAL_SI,
        FUNCION;

start with INICIO;

INICIO ::= Programa Parentesis_a Parentesis_c Llave_a SEGMENTO Llave_c;
SEGMENTO ::= 
        | DE_VARIABLE SEGMENTO
        | AS_VARIABLE SEGMENTO
        | FUNCION SEGMENTO
        | CONDICIONAL_SI SEGMENTO;

TI_VARIABLE ::= Entero | Logico;
DE_VARIABLE ::= TI_VARIABLE Identificador 
              | TI_VARIABLE Identificador Corchete_a OP_ARITMETICA Corchete_c;
AS_VARIABLE ::= DE_VARIABLE Asignacion OPERACION |
                Identificador Asignacion OPERACION |
                Identificador Corchete_a OP_ARITMETICA Corchete_c Asignacion OPERACION;



OPERACION ::= OP_LOGICA;
ELEMENTO ::= Numero | Identificador | Resta Numero | Identificador Corchete_a OP_ARITMETICA Corchete_c;

FACTOR ::= Parentesis_a OP_LOGICA Parentesis_c | Negacion_logica Parentesis_a OP_LOGICA Parentesis_c | ELEMENTO | Negacion_logica ELEMENTO ;
OPERADOR_SUMA ::= Suma | Resta;
OPERADOR_MULT ::= Multiplicacion | Division;
OP_ARITMETICA ::= OP_ARITMETICA OPERADOR_SUMA TERM | TERM;
TERM ::= TERM OPERADOR_MULT OP_MOD | OP_MOD;
OP_MOD ::= OP_MOD Modulo FACTOR | FACTOR;


OPERADOR_RELACIONAL ::= Mayor |
                        Mayor_igual |
                        Menor |
                        Menor_igual |
                        Igual |
                        Diferencia;

OPERADOR_LOGICO ::= Y_logico |
                    O_logico;

OP2 ::= OP_ARITMETICA  OPERADOR_RELACIONAL OP_ARITMETICA | OP_ARITMETICA;
OP_LOGICA ::= OP_LOGICA OPERADOR_LOGICO OP2 | OP2;

CONDICIONAL_SI ::= Si Parentesis_a OP_LOGICA Parentesis_c Llave_a SEGMENTO Llave_c 
                   | Si Parentesis_a OP_LOGICA Parentesis_c Llave_a SEGMENTO Llave_c Sino Llave_a SEGMENTO Llave_c;